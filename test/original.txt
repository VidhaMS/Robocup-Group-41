// #include "Arduino.h"
// #include <Servo.h>

// // Motor pins
// #define LEFT_MOTOR_PIN 0
// #define RIGHT_MOTOR_PIN 1

// // Motor control values
// #define MOTOR_STOP 1500
// #define MOTOR_FORWARD 1025
// #define MOTOR_REVERSE 1975

// // Create servo objects
// Servo leftMotor;
// Servo rightMotor;

// void setup() {
//   Serial.begin(9600);
//   Serial.println("=== Simple Motor Test ===");
  
//   // Attach motors
//   leftMotor.attach(LEFT_MOTOR_PIN);
//   rightMotor.attach(RIGHT_MOTOR_PIN);
  
//   Serial.println("Motors attached to pins 0 and 1");
  
//   // Start with motors stopped
//   leftMotor.writeMicroseconds(MOTOR_STOP);
//   rightMotor.writeMicroseconds(MOTOR_STOP);
  
//   Serial.println("Motors stopped - waiting 3 seconds...");
//   delay(3000);
// }

// void loop() {
//   // Test forward movement
//   Serial.println("FORWARD: Both motors at 1025");
//   leftMotor.writeMicroseconds(MOTOR_FORWARD);
//   rightMotor.writeMicroseconds(MOTOR_FORWARD);
//   delay(3000);
  
//   // Stop
//   Serial.println("STOP: Both motors at 1500");
//   leftMotor.writeMicroseconds(MOTOR_STOP);
//   rightMotor.writeMicroseconds(MOTOR_STOP);
//   delay(2000);
  
//   // Test individual motors
//   Serial.println("LEFT ONLY: Left motor forward");
//   leftMotor.writeMicroseconds(MOTOR_FORWARD);
//   rightMotor.writeMicroseconds(MOTOR_STOP);
//   delay(2000);
  
//   Serial.println("STOP: Both motors stopped");
//   leftMotor.writeMicroseconds(MOTOR_STOP);
//   rightMotor.writeMicroseconds(MOTOR_STOP);
//   delay(2000);
  
//   Serial.println("RIGHT ONLY: Right motor forward");
//   leftMotor.writeMicroseconds(MOTOR_STOP);
//   rightMotor.writeMicroseconds(MOTOR_FORWARD);
//   delay(2000);
  
//   Serial.println("STOP: Both motors stopped");
//   leftMotor.writeMicroseconds(MOTOR_STOP);
//   rightMotor.writeMicroseconds(MOTOR_STOP);
//   delay(2000);
  
//   Serial.println("=== Test cycle complete ===\n");
//   delay(3000);
// }





########################################### MOTOR TEST ###########################################




// #include "Arduino.h"
// #include <Servo.h>

// // SET THIS TO REAL VALUES
// #define LEFT_MOTOR_ADDRESS 0      //Pin corresponding to the left dc motor
// #define RIGHT_MOTOR_ADDRESS 1     //Pin corresponding to the right dc motor
// // #define MIN_SPEED_CAP 1 //Set the minimum speed value that can be written to the motors
// // #define MAX_SPEED_CAP 1 //Set the maximum speed value that can be written to the motors
// #define MIN_SPEED_CAP 1600
// #define MAX_SPEED_CAP 2005

// // Speed increment variables
// #define LOWER_GAP 50    // Small increments below 1700
// #define LOWER_GAP_VALUE 1700
// #define UPPER_GAP 2    // Large increments above 1900
// #define UPPER_GAP_VALUE 1990
// #define NORMAL_GAP 25   // Normal increments between 1700-1900

// // Create servo objects for motor control
// Servo leftMotor;
// Servo rightMotor;


// /* Check whether the speed value to be written is within the maximum
//  *  and minimum speed caps. Act accordingly.
//  *
//  */
// void check_speed_limits(int speed) {
//   if (speed < MIN_SPEED_CAP || speed > MAX_SPEED_CAP) {
//     Serial.print("Warning: Speed ");
//     Serial.print(speed);
//     Serial.println(" is out of bounds!");
//   }
// }


// \
// void set_motor(int left_speed, int right_speed) {
//   // Check speed limits
//   check_speed_limits(left_speed);
//   check_speed_limits(right_speed);

//   Serial.println("Change the motor speed \n");

//   // Update motor speeds
//   if (left_speed >= MIN_SPEED_CAP && left_speed <= MAX_SPEED_CAP) {
//     leftMotor.writeMicroseconds(left_speed);
//     Serial.print("Left motor set to: ");
//     Serial.println(left_speed);
//   }

//   if (right_speed >= MIN_SPEED_CAP && right_speed <= MAX_SPEED_CAP) {
//     rightMotor.writeMicroseconds(right_speed);
//     Serial.print("Right motor set to: ");
//     Serial.println(right_speed);
//   }
// }

// void setup() {
//   // Initialize serial communication
//   Serial.begin(9600);
//   Serial.println("Initializing motors...");
  
//   // Attach motors to pins
//   leftMotor.attach(LEFT_MOTOR_ADDRESS);
//   rightMotor.attach(RIGHT_MOTOR_ADDRESS);
  
//   // Start with motors stopped
//   leftMotor.writeMicroseconds(1500); // Direct call since 1500 is outside our caps
//   rightMotor.writeMicroseconds(1500);
//   Serial.println("Motors stopped (1500 - outside speed caps)");
  
//   Serial.println("Motors initialized and stopped");
//   delay(1000);
// }

// void loop() {
//   Serial.println("=== Starting variable speed ramp test ===");
  
//   // Start from minimum speed and gradually increase to maximum
//   int speed = MIN_SPEED_CAP;
//   while (speed <= MAX_SPEED_CAP) {
//     Serial.print("Setting speed to: ");
//     Serial.println(speed);
//     set_motor(speed, speed); // Both motors same speed
//     delay(500); // Wait 0.5 seconds between speed changes
    
//     // Determine increment based on current speed
//     if (speed < LOWER_GAP_VALUE) {
//       speed += LOWER_GAP;  // Small increments (10)
//       Serial.print("Using LOWER_GAP: +");
//       Serial.println(LOWER_GAP);
//     } else if (speed > UPPER_GAP_VALUE) {
//       speed += UPPER_GAP;  // Large increments (50)
//       Serial.print("Using UPPER_GAP: +");
//       Serial.println(UPPER_GAP);
//     } else {
//       speed += NORMAL_GAP; // Normal increments (25)
//       Serial.print("Using NORMAL_GAP: +");
//       Serial.println(NORMAL_GAP);
//     }
//   }
  
//   Serial.println("Maximum speed reached!");
//   delay(2000); // Stay at max speed for 2 seconds
  
//   // Gradually slow down back to minimum
//   Serial.println("Slowing down...");
//   speed = MAX_SPEED_CAP;
//   while (speed >= MIN_SPEED_CAP) {
//     Serial.print("Setting speed to: ");
//     Serial.println(speed);
//     set_motor(speed, speed);
//     delay(300);
    
//     // Determine decrement based on current speed
//     if (speed < LOWER_GAP_VALUE) {
//       speed -= LOWER_GAP;  // Small decrements (10)
//       Serial.print("Using LOWER_GAP: -");
//       Serial.println(LOWER_GAP);
//     } else if (speed > UPPER_GAP_VALUE) {
//       speed -= UPPER_GAP;  // Large decrements (50)
//       Serial.print("Using UPPER_GAP: -");
//       Serial.println(UPPER_GAP);
//     } else {
//       speed -= NORMAL_GAP; // Normal decrements (25)
//       Serial.print("Using NORMAL_GAP: -");
//       Serial.println(NORMAL_GAP);
//     }
//   }
  
//   // Stop motors (outside speed caps)
//   Serial.println("Stopping motors (1500 - outside caps)");
//   leftMotor.writeMicroseconds(1500);
//   rightMotor.writeMicroseconds(1500);
  
//   Serial.println("Stopped - waiting 3 seconds before next cycle");
//   delay(3000);
// }




